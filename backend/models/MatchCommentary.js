const mongoose = require('mongoose');

const MatchCommentarySchema = new mongoose.Schema({
    sport_id: { type: mongoose.Schema.Types.ObjectId, ref: 'Sport', default: null },
    source_id: { type: mongoose.Schema.Types.ObjectId, ref: 'Source', default: null },
    match: { type: mongoose.Schema.Types.ObjectId, ref: 'Match' },
    match_id: { type: Number},
    tej_match_id : { type: String},
    cid: { type: String},
    inning_id: { type: Number},
    inning: {
      iid: { type: Number },
      number: { type: Number },
      name: { type: String },
      short_name: { type: String },
      status: { type: Number },
      issuperover: { type: String },
      result: { type: Number },
      batting_team_id: { type: Number },
      fielding_team_id: { type: Number },
      scores: { type: String },
      scores_full: { type: String },
      batsmen: {type : [{
        name: { type: String },
        batsman_id: { type: String },
        batting: { type: String },
        position: { type: String },
        role: { type: String },
        role_str: { type: String },
        runs: { type: String },
        balls_faced: { type: String },
        fours: { type: String },
        sixes: { type: String },
        run0: { type: String },
        run1: { type: String },
        run2: { type: String },
        run3: { type: String },
        run5: { type: String },
        how_out: { type: String },
        dismissal: { type: String },
        strike_rate: { type: String },
        bowler_id: { type: String },
        first_fielder_id: { type: String },
        second_fielder_id: { type: String },
        third_fielder_id: { type: String },
      }]},
      bowlers: {type : [{
        name: { type: String },
        bowler_id: { type: String },
        bowling: { type: String },
        position: { type: String },
        overs: { type: String },
        maidens: { type: String },
        runs_conceded: { type: String },
        wickets: { type: String },
        noballs: { type: String },
        wides: { type: String },
        econ: { type: String },
        run0: { type: String },
        bowledcount: { type: String },
        lbwcount: { type: String },
      }]},
      fielder: {type : [{
        fielder_id: { type: String },
        fielder_name: { type: String },
        catches: { type: Number },
        runout_thrower: { type: Number },
        runout_catcher: { type: Number },
        runout_direct_hit: { type: Number },
        stumping: { type: Number },
        is_substitute: { type: String },
      }]},
      powerplay: {type : []},
      review: {
        batting: {
          batting_team_total_review: { type: String },
          batting_team_review_success: { type: String },
          batting_team_review_failed: { type: String },
          batting_team_review_available: { type: String },
          batting_team_review_retained: { type: String },
        },
        bowling: {
          bowling_team_total_review: { type: String },
          bowling_team_review_success: { type: String },
          bowling_team_review_failed: { type: String },
          bowling_team_review_available: { type: String },
          bowling_team_review_retained: { type: String },
        },
      },
      did_not_bat: {type : []},
      max_over: { type: String },
      target: { type: String },
    },
    commentaries: {type : [{
      event_id: { type: String },
      event: { type: String },
      batsman_id: { type: String },
      bowler_id: { type: String },
      over: { type: String },
      ball: { type: String },
      score: { type: String },
      commentary: { type: String },
      noball_dismissal: { type: Boolean, default: false },
      text: { type: String },
      timestamp: { type: Number },
      run: { type: Number },
      noball_run: { type: String },
      wide_run: { type: String },
      bye_run: { type: String },
      legbye_run: { type: String },
      bat_run: { type: String },
      noball: { type: Boolean, default: false },
      wideball: { type: Boolean, default: false },
      six: { type: Boolean, default: false },
      four: { type: Boolean, default: false },
      batsmen: {type : [{
        runs: { type: Number },
        balls_faced: { type: Number },
        fours: { type: Number },
        sixes: { type: Number },
        batsman_id: { type: Number },
      }]},
      bowlers: {type : [{
        runs_conceded: { type: Number },
        maidens: { type: Number },
        wickets: { type: Number },
        bowler_id: { type: Number },
        overs: { type: Number },
      }]},
    }]},
    teams: {type : [{
      tid: { type: Number },
      title: { type: String },
      abbr: { type: String },
      alt_name: { type: String },
      type: { type: String },
      thumb_url: { type: String },
      logo_url: { type: String },
      country: { type: String },
      sex: { type: String },
    }]},
    players: {type : [{
      pid: { type: Number },
      title: { type: String },
      short_name: { type: String },
      first_name: { type: String },
      last_name: { type: String },
      middle_name: { type: String },
      birthdate: { type: String },
      birthplace: { type: String },
      country: { type: String },
      primary_team: {type : []},
      logo_url: { type: String },
      playing_role: { type: String },
      batting_style: { type: String },
      bowling_style: { type: String },
      fielding_position: { type: String },
      recent_match: { type: Number },
      recent_appearance: { type: Number },
      fantasy_player_rating: { type: Number },
      facebook_profile: { type: String },
      twitter_profile: { type: String },
      instagram_profile: { type: String },
      debut_data: { type: String },
      thumb_url: { type: String },
      nationality: { type: String },
      role: { type: String },
      role_str: { type: String },
    }]},
  });

// Create a compound index on firstName and lastName
MatchCommentarySchema.index({ match_id: 1, inning_id: 1 }, { unique: true });
module.exports = mongoose.model('MatchCommentary', MatchCommentarySchema);